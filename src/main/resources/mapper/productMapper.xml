<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

<!-- CRUD 4가지 만들기 -->
<!-- product.메서드명 으로 mybatis를 사용할 수 있다. -->
<!-- root-context.xml의 지정된 경로로 처리해준다. -->
	<insert id="insert" parameterType="productVO">
	<!-- ProductDAO에서 id가 insert인 기능을 찾을때 아래 SQL문을 실행하여 DB에 data 저장 -->
		insert into PRODUCT values ((select nvl(max(pnum),1)+1 from product),
		#{pname}, #{ptype},	#{ctype}, #{price}, #{address}, #{contact}, #{floor},
		#{rsize}, #{room}, #{total}, #{placetype}, #{roomimg}, #{pinfo}, #{dstatue},
		#{address2})
		<!-- 첫번째 컬럼인 pnum은 max값에 1씩 더해서 입력이 되게 자동채번 설정 다른 컬럼들은 입력값을 통해 입력 -->
	</insert>	
	
	<select id="select" parameterType="productVO" resultType="productVO">
		select * from PRODUCT where contact = #{contact} order by pnum
		<!-- select문으로 contact 조건에  맞는 모든 컬럼값을 가져온다.(pnum기준으로 오름차순 정렬)-->
		<!-- order by는 오름차순이 default 값으로 생략하면 오름차순 정렬 -->
		<!-- 받아오는 row data의 형태는 productVO라서 resultType을 꼭 지정해줘야함. -->
		<!-- select sql문은 반듯이 resultType가 필요하다. -->
	</select>

	<select id="all" parameterType="productVO" resultType="productVO">
		select * from PRODUCT order by pnum
		<!-- ProductDAO에서 all 맵퍼로 연결할때 조건 없이 모든 row data를 리턴해준다.(오름차순 정렬) -->
	</select>
	
	<select id="detail" parameterType="productVO" resultType="productVO">
		select * from PRODUCT where pnum = #{pnum}
		<!-- ProductDAO에서 detail 맵퍼로 연결할때 조건에 맞는 모든 row data를 리턴해준다. -->
	</select>
	
	<update id="update" parameterType="productVO">
		update PRODUCT set pname = #{pname}, ptype = #{ptype}, ctype = #{ctype},
		price = #{price}, address = #{address}, contact = #{contact}, floor = #{floor},
		rsize = #{rsize}, room = #{room}, total = #{total}, placetype = #{placetype},
		roomimg = #{roomimg}, pinfo = #{pinfo}, dstatue = #{dstatue}, address2 = #{address2}
		where pnum = #{pnum}
		<!-- pnum을 조건으로 해당 row에 있는 모든 컬럼을 수정할때 사용하는 sql문 -->
		<!-- select sql문이 아니라서 리턴타입이 없다. -->
	</update>
	
	<delete id="delete" parameterType="productVO">
		delete from PRODUCT where pnum = #{pnum}
		<!-- pnum을 조건으로 row data를 삭제하는 sql문 -->
	</delete>
	
	<!-- 지수님SQL -->
	<select id="recentselect" parameterType="mypageVO" resultType="String">
		select * from PRODUCT where pnum = #{pnum}
	</select>

	<select id="recentselect2" parameterType="String" resultType="productVO">
		select * from PRODUCT where pnum = #{pnum}
	</select>
	
	<select id="recentselect3" parameterType="String" resultType="productVO">
		select * from PRODUCT where userid = #{userid}
	</select>
	
	<!-- 선종님SQL -->
	<select id="recommend" parameterType="ruserVO" resultType="productVO">
		select * from PRODUCT where ctype = #{usertype} 
		and ptype = #{userroom} and placetype = #{userinterest}
	</select>
	
	<!-- 신화원SQL -->
	<!-- 전체상품 정보를 출력 -->
	<select id="productList" resultType="productVO">
		select * from "PRODUCT" 
	</select>
	
	<!-- 선택된 방종류에 해당하는 정보를 출력 -->
	<select id="productList1" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ptype = #{ptype}
	</select>
	
	<!-- 선택된 거래유형에 해당하는 정보를 출력 -->
	<select id="productList2" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ctype = #{ctype}
	</select>
	
	<!-- 선택된 세권유형에 해당하는 정보를 출력-->
	<select id="productList3" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where placetype = #{placetype}
	</select>
	
	<!-- 선택된 방종류와 거래유형에 해당하는 정보를 출력 -->	
	<select id="productList4" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ptype = #{ptype} and ctype = #{ctype}
	</select>
	
	<!-- 선택된 방종류와 세권유형에 해당하는 정보를 출력 -->
	<select id="productList5" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ptype = #{ptype} and placetype = #{placetype}
	</select>
	
	<!-- 선택된 거래유형과 세권유형에 해당하는 정보를 출력 -->
	<select id="productList6" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ctype = #{ctype} and placetype = #{placetype}
	</select>
	
	<!-- 선택된 방종류와 거래유형 그리고 세권유형에 해당하는 정보를 출력 -->
	<select id="productList7" parameterType="productVO" resultType="productVO">
		select * from "PRODUCT" where ptype = #{ptype} and ctype = #{ctype} and placetype = #{placetype}
	</select>
	
	<select id="productDetailList" parameterType="String" resultType="productVO">
		select * from "PRODUCT" where pnum = #{pnum}
	</select>
	
</mapper>